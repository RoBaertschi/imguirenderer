plugins {
	id 'eclipse'
	id 'maven-publish'
	id 'net.neoforged.gradle' version '[6.0.18,6.2)'
	id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.0'
group = 'robaertschi.imguirenderer' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'imguirenderer'
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
jarJar.enable()
jarJar {}

minecraft {
	mappings channel: 'official', version: '1.20.1'
	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'imguirenderer'

			mods {
				imguirenderer {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'imguirenderer'

			mods {
				imguirenderer {
					source sourceSets.main
				}
			}
		}
		gameTestServer {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'imguirenderer'

			mods {
				imguirenderer {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			args '--mod', 'imguirenderer', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				imguirenderer {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	mavenCentral()
	maven { url "https://raw.githubusercontent.com/kotlin-graphics/mary/master" }
	maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://thedarkcolour.github.io/KotlinForForge/" }
	maven { url 'https://jitpack.io' }
	maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
}

ext {
	lwjglVersion = '3.3.1'
	imguiVersion = '1.86.10'
}

dependencies {
	minecraft 'net.neoforged:forge:1.20.1-47.1.25'
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
	
	['binding', 'lwjgl3', 'natives-linux', 'natives-windows'].each {
		minecraftLibrary (group: "io.github.spair", name: "imgui-java-$it", version: "$imguiVersion") {
			exclude group: "org.lwjgl"
		}
		jarJar(group: "io.github.spair", name: "imgui-java-${it}", version: "[0,)") {
			transitive(false)
			exclude group: "org.lwjgl"
		}
	}
}

mixin {
	config 'imguirenderer.mixin.json'
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : "ImGUI Renderer",
				"Specification-Vendor"    : "robaertschi",
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : "imguirenderersareus",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				"MixinConfigs"			  : "forge-mixin.json"
		])
	}
}
jar.finalizedBy('reobfJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/mcmodsrepo"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}
